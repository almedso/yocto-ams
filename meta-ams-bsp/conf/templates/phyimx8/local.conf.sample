# CONF_VERSION = "2"
DISTRO ?= "ams-bsp"
YOCTO_VERSION = "kirkstone"

PACKAGE_CLASSES ?= "package_ipk"

USER_CLASSES ?= "buildstats"
PATCHRESOLVE = "noop"

BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    HALT,${TMPDIR},100M,1K \
    HALT,${DL_DIR},100M,1K \
    HALT,${SSTATE_DIR},100M,1K \
    HALT,/tmp,10M,1K"

# qemu specifics
PACKAGECONFIG:append:pn-qemu-native = " sdl"
PACKAGECONFIG:append:pn-nativesdk-qemu = " sdl"

# default machines
MACHINE ?= "phyboard-polis-imx8mm-4"

# freescale/nxp predefinitions
ACCEPT_FSL_EULA = "1"
# Make sure the EULA version matches the one from meta-nxp layer (not meta-freescale)
FSL_EULA_FILE_MD5SUM = "5a0bf11f745e68024f37b4724a5364fe"

# raspberry pre-definitions

# overwrite in site.conf
DL_DIR ?= "${TOPDIR}/download-cache/"
SSTATE_DIR ?= "${TOPDIR}/sstate-cache/${DISTRO}"

# Fix the temp dir such that later rsync can refer to output
# make sure custom glibc recipes do not overwrite TMPDIR
# TCLIBCAPPEND = ""
# TMPDIR = "${TOPDIR}/tmp-${DISTRO}"

GLIBC_GENERATE_LOCALES ?= "en_US.UTF-8 de_DE.UTF-8"
IMAGE_LINGUAS ?= "en-us de-de"

BB_GENERATE_MIRROR_TARBALLS = "0"
INHERIT += "rm_work"
RM_OLD_IMAGE = "1"

# in order to translate lapack fortran support (libgfortran) is required.
# fortran support is enabled via
FORTRAN_forcevariable = ",fortran"

# Injection variables into the build process
BB_ENV_PASSTHROUGH = ""
# Development branch for an application repo branch
# BB_ENV_PASSTHROUGH += "APP_BRANCH"

# Show cache directories at start of bitbake
BUILDCFG_VARS += " DL_DIR SSTATE_DIR "

##########################################################################
# starting from here is the phytec upstream local conf
# uncommented lines are done with ###

# License Handling
#  - Uncomment for i.MX6 proprietary GPU libraries
#LICENSE_FLAGS_ACCEPTED += "license-nxp_v14-june-2016_imx-gpu-viv"
#  - Uncomment for Freescale i.MX6 VPU firmware blobs
#LICENSE_FLAGS_ACCEPTED += "license-freescale_v12-march-2016_firmware-imx"

# build artifacts are deployed here
### DEPLOY_DIR = "${TOPDIR}/deploy"
### TI_COMMON_DEPLOY = "${DEPLOY_DIR}"

# When building multiple distros in the same TOPDIR
#TMPDIR = "${TOPDIR}/${DISTRO}-tmp"
#DEPLOY_DIR = "${TOPDIR}/${DISTRO}-deploy"

# enable bitbakes git shallow functionality: this reduces download volume
# from 7.3G to 1.6 G as of sumo. If you need the git history of a project,
# you can run a "git remote update" in the tmp dir, as the remotes are
# correctly specified
### BB_GIT_SHALLOW = "1"

# Select configuration UI for linux and barebox recipe. The openembedded
# default is 'menuconfig', 'nconfig' has more features.
# busybox only supports menuconfig
#KCONFIG_CONFIG_COMMAND = "menuconfig"
### KCONFIG_CONFIG_COMMAND = "nconfig"
### KCONFIG_CONFIG_COMMAND:pn-busybox = "menuconfig"

# SDK will be build for that cpu
#SDKMACHINE ?= "x86_64"

#######################
# Image configuration #
#######################

# You can disable and enable FSTYPES as you wish. e.g. 'ext4'.
# This variable is ordering dependend.
#IMAGE_FSTYPES = "tar.gz wic ubifs emmc"

# To change the variable for any imx8 machine:
#IMAGE_FSTYPES:mx8-generic-bsp = "tar.gz wic wic.bmap"

# phyCORE-i.MX8X uses wic.xz images.
# To change the variable for imx8x machine only:
#IMAGE_FSTYPES:mx8x-generic-bsp = "tar.gz wic.xz wic.bmap"

# By default both the partup package and wic images are build. Disable one of
# them to save space.
# Disable partup package build
# IMAGE_FSTYPES:remove = "partup"

# Disable wic image build
# IMAGE_FSTYPES:remove = "wic wic.bmap wic.xz"

# Turn on debugging options of the kernel
#DEBUG_BUILD:pn-linux-mainline = "1"
# Turn on debugging options of the imx kernel
#DEBUG_BUILD:pn-linux-imx = "1"
# Turn on debugging options of the barebox
#DEBUG_BUILD:pn-barebox = "1"

# Include kernel sources in SDK
### TOOLCHAIN_TARGET_TASK:append = " kernel-devsrc"

# The default package class of the distro ampliphy is 'package_ipk'. The first
# value is used as the package manager to build the image and sdk. To build
# also tar packages use
#PACKAGE_CLASSES = "package_ipk package_tar"

# Variable IMAGE_ROOTFS_EXTRA_SPACE from poky/meta/conf/documentation.conf:
#   Defines additional free disk space created in the image in Kbytes. By
#   default, this variable is set to '0'.
# This example line adds an additional 512 MiB of free space to the root
# filesystem:
#IMAGE_ROOTFS_EXTRA_SPACE = "524288"

# See https://docs.yoctoproject.org/ref-manual/features.html#image-features
#   "Through these variables, you can add several different predefined
#    packages such as development utilities or packages with debug information
#    needed to investigate application problems or profile applications
EXTRA_IMAGE_FEATURES = ""
# - "Makes an image suitable for development (e.g. allows root logins without
#    passwords and enables post-installation logging)"
EXTRA_IMAGE_FEATURES += "debug-tweaks"
# - "Installs debug symbol packages for all packages installed in a given
#    image."
#EXTRA_IMAGE_FEATURES += "dbg-pkgs"
# - "Installs debugging tools such as strace and gdb."
#EXTRA_IMAGE_FEATURES += "tools-debug"

######################
# RAUC configuration #
######################

# certificate location for signing bundles
#CERT_PATH = "${TOPDIR}/../sources/meta-ampliphy/openssl-ca"

####################
# QT configuration #
####################

# The following line disables the autostart of the phytec-qtdemo by
# default, but you can start the demo anytime using
#  $ systemctl start phytec-qtdemo.service
#SYSTEMD_AUTO_ENABLE:pn-phytec-qtdemo = "disable"

# We disable qt widgets per default to save about 10 MB of storage. If
# you need qt widget support, you can enable it with this line
#DISTRO_FEATURES:append = " qtwidgets"

CONF_VERSION = "2"

# Uncomment to accept NXP EULA (needed, if any NXP / freescale layer is used)
# EULA can then be found under ../sources/meta-freescale/EULA
ACCEPT_FSL_EULA = "1"

# A TISDK BSP requires per default an external toolchain
# Provide a default path that is compatible to our TISDK docker image
### TOOLCHAIN_BASE ?= "/opt/PHYTEC_BSPs"
